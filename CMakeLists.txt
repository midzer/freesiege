PROJECT(freesiege)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

INCLUDE(FindPkgConfig)

PKG_SEARCH_MODULE(SDL2 sdl2)
PKG_SEARCH_MODULE(SDL2MIXER SDL2_mixer>=2.0.0)
PKG_SEARCH_MODULE(SDL2TTF SDL2_ttf>=2.0.0)
PKG_SEARCH_MODULE(SDL2IMAGE SDL2_image>=2.0.0)
PKG_SEARCH_MODULE(SDL2NET OPTIONAL SDL2_net>=2.0.0)

INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SDL2IMAGE_INCLUDE_DIRS})
if(${SDL2NET_FOUND})
    INCLUDE_DIRECTORIES(${SDL2NET_INCLUDE_DIRS})
endif(${SDL2NET_FOUND})
INCLUDE_DIRECTORIES(${SDL2MIXER_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SDL2TTF_INCLUDE_DIRS})

INCLUDE(common/CMakeLists.txt)
INCLUDE(engine/CMakeLists.txt)
INCLUDE(gui/CMakeLists.txt)
INCLUDE(units/CMakeLists.txt)

SET(FS_ALL_SRCS
    ${FS_COMMON_SRCS}
    ${FS_ENGINE_SRCS}
    ${FS_GUI_SRCS}
    ${FS_UNITS_SRCS}
)

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall -flto -O3 -sUSE_SDL=2 -sUSE_SDL_IMAGE=2 -sUSE_SDL_MIXER=2 -sUSE_SDL_TTF=2")

OPTION(NET_ENABLED "Assume Freesiege will be compiled with network support" OFF)

OPTION(COMPILE_FOR_PACKAGE "Assume Freesiege will be installed to /usr/bin and /usr/share" OFF)
IF(COMPILE_FOR_PACKAGE)
	ADD_DEFINITIONS(-DFREESIEGE_DATA_DIR="${CMAKE_INSTALL_PREFIX}/share/freesiege/")
	ADD_DEFINITIONS(-DFREESIEGE_ICON_PATH="${CMAKE_INSTALL_PREFIX}/share/icons/freesiege.png")
ELSE(COMPILE_FOR_PACKAGE)
    ADD_DEFINITIONS(-DFREESIEGE_ICON_PATH="freesiege.png")
ENDIF(COMPILE_FOR_PACKAGE)

IF(CMAKE_BUILD_TYPE MATCHES Debug)
	ADD_EXECUTABLE(fight fight.cpp ${FS_ALL_SRCS})
	TARGET_LINK_LIBRARIES(fight  ${SDL2MIXER_LIBRARIES} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARIES} ${SDL2NET_LIBRARIES} ${SDL2TTF_LIBRARIES})
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)

ADD_EXECUTABLE(freesiege freesiege.cpp ${FS_ALL_SRCS})

IF(NET_ENABLED)
IF(SDL2NET_FOUND)
	ADD_DEFINITIONS(-DNET_SUPPORT)
	MESSAGE( STATUS "Network enabled" )
	TARGET_LINK_LIBRARIES(freesiege ${SDL2MIXER_LIBRARIES} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARIES} ${SDL2NET_LIBRARIES} ${SDL2TTF_LIBRARIES})
ELSE(SDL2NET_FOUND)
	MESSAGE( STATUS "Network disabled" )
	TARGET_LINK_LIBRARIES(freesiege ${SDL2MIXER_LIBRARIES} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARIES} ${SDL2TTF_LIBRARIES})
ENDIF(SDL2NET_FOUND)
ELSE(NET_ENABLED)
	MESSAGE( STATUS "Network disabled" )
	TARGET_LINK_LIBRARIES(freesiege ${SDL2MIXER_LIBRARIES} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARIES} ${SDL2TTF_LIBRARIES})
ENDIF(NET_ENABLED)

install(DIRECTORY ${PROJECT_SOURCE_DIR}/sprites DESTINATION share/freesiege/)
install(DIRECTORY ${PROJECT_SOURCE_DIR}/sounds DESTINATION share/freesiege/)
install(DIRECTORY ${PROJECT_SOURCE_DIR}/anims DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/combi.cfg DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/sprites.cfg DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/anims.cfg DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/musics.cfg DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/Swift.ttf DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/Swift_license.txt DESTINATION share/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/README DESTINATION share/licences/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/COPYING DESTINATION share/licences/freesiege/)
install(FILES ${PROJECT_SOURCE_DIR}/freesiege.png DESTINATION share/icons/)
install(FILES ${PROJECT_SOURCE_DIR}/freesiege.desktop DESTINATION share/applications)
install(TARGETS freesiege RUNTIME DESTINATION bin)
